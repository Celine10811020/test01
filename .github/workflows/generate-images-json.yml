name: Update Images JSON

on:
  push:
    paths:
      - 'hoho/**'  # 當 hoho 資料夾中的文件發生改變時觸發

jobs:
  update-json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Generate and update images.json
      run: |
        IMAGES_JSON=images.json
        # 如果 images.json 文件不存在，則創建一個空的
        if [ ! -f "$IMAGES_JSON" ]; then
          echo "[]" > $IMAGES_JSON
        fi
        # 從 images.json 文件中讀取現有的數組
        existing_images=$(cat $IMAGES_JSON | jq -c '.')
        # 初始化一個新的數組
        new_images="[]"
        # 遍歷 hoho 資料夾中的所有 jpg 文件
        for file in hoho/*.jpg; do
          filename=$(basename "$file")
          # 根據你的文件名格式提取開始日期和結束日期
          start=$(echo $filename | sed -n 's/.*診所\([0-9]\{8\}\)-\([0-9]\{4\}\).*/\1/p')
          end=$(echo $filename | sed -n 's/.*診所\([0-9]\{8\}\)-\([0-9]\{4\}\).*/\2/p')
          # 構建新的 json 對象
          new_image=$(jq -n --arg path "$file" --arg start "$start" --arg end "$end" '{path: $path, start: $start, end: $end}')
          # 將新對象添加到新的數組中
          new_images=$(echo $new_images | jq ". + [$new_image]")
        done
        # 合併現有的數組和新的數組，並刪除重複項
        updated_images=$(echo $existing_images $new_images | jq -s 'add | unique_by(.path)')
        # 將更新的數組寫回 images.json 文件
        echo $updated_images | jq '.' > $IMAGES_JSON

    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add images.json
        git commit -m 'Update images.json with new images'
        git push
